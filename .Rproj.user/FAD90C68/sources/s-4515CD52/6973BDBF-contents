library(OmicsPLS)
library(magrittr)

N=300;p=20;q=20
r=2
rx=3
ry=4

x <- matrix(rnorm(p*N), N,p)
y <- matrix(rnorm(q*N), N,q)
z <- rnorm(N)


params_true <- generate_params(x, y, z, r, rx, ry, alpha = 0.2, type='random')
# params_true$a <- 0*t(3:2)
params_true$b <- 0*t(r:1)
# params_true$sig2G <- 0*0.001
# params_true$SigH <- diag(0.00001,r)
dat <- generate_data(N, params_true)

dim(dat)

X <- dat[,1:p]
Y <- dat[,(p+1):(p+q)]
Z <- dat[,p+q+1]

rm(x,y,z)

fit <- Su_PO2PLS(X, Y, Z, r, rx, ry, steps = 10000, init_param = "random")

params_true %>% str
fit$params %>% str


fit$debug %>% sapply(function(e) e$a[1]) %>% c(params_true$a[1],.) %>% plot
abline(h=params_true$a[1])
E_step(X, Y, Z, params_true) %>% str
fit$params %>% str
params_true %>% str
t(params_true$W) %*% fit$params$W

pre_z <- with(fit$params, X%*%W%*%t(a) + Y%*%C%*%t(b))
with(glm(Z~pre_z) %>% summary, 1 - deviance/null.deviance)

fit_o2 <- PO2PLS::PO2PLS(X, Y, r, rx, ry, steps = 1000, init_param = params_true)


PO2PLS::E_step(X, Y, params_true)[-(1:2)] %>% str
t(params_true$W) %*% fit_o2$params$W

with(with(fit_o2$params, glm(Z~X%*%W) %>% summary), 1 - deviance/null.deviance)

# Shh different in E steps
